R
source("INLA_ST_func.R")

# Build grid table
annualtemp <- tibble(read.table("climate/meanAnnualTemperature.csv",sep=",",header=TRUE))
annualtemp <- gather(annualtemp,Age,annualtemp,-Site)
annualtemp$Age <- as.numeric(gsub("X","",annualtemp$Age))*1000
annualprec <- tibble(read.table("climate/annualPrecipitation.csv",sep=",",header=TRUE))
annualprec <- gather(annualprec,Age,annualprec,-Site)
annualprec$Age <- as.numeric(gsub("X","",annualprec$Age))*1000
tempseaso <- tibble(read.table("climate/temperatureSeasonality.csv",sep=",",header=TRUE))
tempseaso <- gather(tempseaso,Age,tempseaso,-Site)
tempseaso$Age <- as.numeric(gsub("X","",tempseaso$Age))*1000
precseaso <- tibble(read.table("climate/precipitationSeasonality.csv",sep=",",header=TRUE))
precseaso <- gather(precseaso,Age,precseaso,-Site)
precseaso$Age <- as.numeric(gsub("X","",precseaso$Age))*1000
human <- tibble(read.table("human_distribution/humanPresenceAbsence.csv",sep=",",header=TRUE))
human <- gather(human,Age,human,-Site)
human$Age <- as.numeric(gsub("kbp","",gsub("X","",human$Age)))*1000
gridtab <- full_join(annualtemp,annualprec)
gridtab <- full_join(gridtab,tempseaso)
gridtab <- full_join(gridtab,precseaso)
gridtab <- full_join(gridtab,human)
allgridtimes <- sort(unique(gridtab$Age))


# Build site table
plant <- t(read.table("plant/genus_richness.csv",sep=",",header=TRUE,row.names=1))
plant <- data.frame(row.names(plant),plant)
colnames(plant)[1] <- "sample"
animal <- read.table("animal/distribution_matrix.csv",sep=",",header=TRUE)
metadata <- read.table("sample_metadata/sample_metadata_v17.csv",sep=",",header=TRUE)
metadata$Age <- as.numeric(metadata$Age)
metadata <- metadata[which(metadata$Age >= 0),]
metadata <- tibble(metadata)
sitetab <- left_join(metadata,animal,by = c("Lab_ID" = "sample") )
sitetab <- left_join(sitetab,plant,by = c("Lab_ID" = "sample") )

# Plant, Animal and Environment names
allplantnames <- colnames(plant)[-1]
allanimalnames <- colnames(animal)[-1]
allenvnames <- colnames(gridtab)[-c(1,2)]

# Add covariates to site table
covtab <- tibble(do.call(rbind,apply(sitetab,1,function(vec){
    names(vec) <- colnames(sitetab)
    Lab_ID <- vec["Lab_ID"]
    Site <- vec["Site_abbreviation"]
    Age <- as.numeric(vec["Age"])
    NearestAge <- FindNearest(allgridtimes,Age)
    covars <- cbind(Lab_ID,gridtab[which(gridtab$Site == Site & gridtab$Age == NearestAge),])
    return(covars)
})))
sitetab <- left_join(sitetab,covtab,by = c("Lab_ID"))
colnames(sitetab)[which(colnames(sitetab) == "Age.x")] <- "Age"
colnames(sitetab)[which(colnames(sitetab) == "Age.y")] <- "NearestAge"
colnames(sitetab)[which(colnames(sitetab) == "Rigion")] <- "Region"


# Prepare spatial and temporal meshes
k <- 6
tknots <- seq(min(sitetab$Age), max(sitetab$Age), length = k)
mesh.t <- inla.mesh.1d(tknots)

xytab <- cbind(sitetab$Longitude,sitetab$Latitude)
xytab <- LonLatToAzi(xytab)
n <- dim(sitetab)[1]

bound <- inla.nonconvex.hull(as.matrix(xytab))
mesh.s <- inla.mesh.2d(bound = bound,max.edge = c(200, 400),max.n=200,cutoff = 500)
plot(mesh.s)
spde.s <- inla.spde2.matern(mesh.s)

# Filter for animals with total P > 0.1
ratios <- sapply(allanimalnames,function(response){
    vec <- sitetab[,response][!is.na(sitetab[,response])]
    ratio <- sum(vec)/length(vec)
    return(ratio)
})
goodanimalnames <- allanimalnames[which(ratios > 0.05)]


# Model with no covariates
reslist <- list()
for(response in allanimalnames){

    # Run INLA - Binomial model with number of trials = 1 (no covariates)
    reslist[[response]] <- RunInlaBin(response,sitetab,xytab,mesh.s,mesh.t,1,namescov=c(),normcov=FALSE)
}


# Define lists to store results
rescovnormlist <- list()
resclimhumnormlist <- list()
resclimhumaninormlist <- list()
resclimnormlist <- list()
reshumnormlist <- list()
resaninormlist <- list()

for(response in goodanimalnames){    

    # Run INLA - Binomial model with number of trials = 1 with all covariates (normalized)
    allcov <- c(allenvnames,allplantnames,goodanimalnames)
    allcov <- allcov[allcov != response]
    rescovnormlist[[response]] <- RunInlaBin(response,sitetab,xytab,mesh.s,mesh.t,1,namescov=allcov,normcov=TRUE)

    # Run INLA - Binomial model with number of trials = 1 with human and climate covariates (normalized)
    resclimhumnormlist[[response]] <- RunInlaBin(response,sitetab,xytab,mesh.s,mesh.t,1,namescov=allenvnames,normcov=TRUE)

    # Run INLA - Binomial model with number of trials = 1 with human, climate and animal covariates (normalized)
    namesclimhumani <- c(allenvnames,goodanimalnames)
    namesclimhumani <- namesclimhumani[namesclimhumani != response]
    resclimhumaninormlist[[response]] <- RunInlaBin(response,sitetab,xytab,mesh.s,mesh.t,1,namescov=namesclimhumani,normcov=TRUE)

    # Run INLA - Binomial model with number of trials = 1 with human covariates (normalized)
    reshumnormlist[[response]] <- RunInlaBin(response,sitetab,xytab,mesh.s,mesh.t,1,namescov=c("human"),normcov=TRUE)

    # Run INLA - Binomial model with number of trials = 1 with climate covariates (normalized)
    namesclim <- allenvnames[which(allenvnames != "human")]
    resclimnormlist[[response]] <- RunInlaBin(response,sitetab,xytab,mesh.s,mesh.t,1,namescov=namesclim,normcov=TRUE)

    # Run INLA - Binomial model with number of trials = 1 with animal covariates (normalized)
    animalcov <- goodanimalnames[goodanimalnames != response]
    resnormlist[[response]] <- RunInlaBin(response,sitetab,xytab,mesh.s,mesh.t,1,namescov=animalcov,normcov=TRUE)
}



# CPO
cpotab <- sapply(goodanimalnames, function(response){
    print(response)
    vec <- c(-sum(log(reslist[[response]]$cpo$cpo),na.rm=TRUE),
    -sum(log(resclimnormlist[[response]]$cpo$cpo),na.rm=TRUE),
    -sum(log(reshumnormlist[[response]]$cpo$cpo),na.rm=TRUE),
    -sum(log(resclimhumnormlist[[response]]$cpo$cpo),na.rm=TRUE),
    -sum(log(resclimhumaninormlist[[response]]$cpo$cpo),na.rm=TRUE)
    )
    return(vec)
})
rownames(cpotab) <- c("None","Climate","Human","Cimate+Human","Climate+Human+Animal")
cpotabmelted <- melt(cpotab)
colnames(cpotabmelted) <- c("Model","Animal","CPO")
ggplot(cpotabmelted) +
geom_point(aes(x=Model,y=CPO,group=Animal,colour=Animal)) +
geom_line(aes(x=Model,y=CPO,group=Animal,colour=Animal))


# waic
waictab <- sapply(goodanimalnames, function(response){
    print(response)
    vec <- c(
        reslist[[response]]$waic$waic,
        resclimnormlist[[response]]$waic$waic,
        reshumnormlist[[response]]$waic$waic,
        resclimhumnormlist[[response]]$waic$waic,
        resclimhumaninormlist[[response]]$waic$waic
    )
    return(vec)
})
rownames(waictab) <- c("None","Climate","Human","Cimate+Human","Climate+Human+Animal")
waictabmelted <- melt(waictab)
colnames(waictabmelted) <- c("Model","Animal","WAIC")
ggplot(waictabmelted) +
geom_point(aes(x=Model,y=WAIC,group=Animal,colour=Animal)) +
geom_line(aes(x=Model,y=WAIC,group=Animal,colour=Animal))





# Project values
for(response in allanimalnames){
res <- reslist[[response]]

PlotBox <- LonLatToAzi(rbind(c(135,50),c(45,50),c(-45,50),c(-135,50)))
projl <- ProjMesh(res,xytab,mesh.s,mesh.t,spde.s,PlotBox=PlotBox)

# Plot them...
minplot <- 0
maxplot <- 1
mplots <- lapply(seq(1,k),function(i){
m1 <- melt(projl[[1]][[i]])
m1 <- cbind(projl[[2]]$lattice$loc,m1[,3])
m1 <- data.frame(m1)
colnames(m1) <- c("Lon","Lat","Prob")
title <- paste("t = ",round(tknots[i])," years",sep="")
p1 <- PlotPolar(m1,title=title,minplot=minplot,maxplot=maxplot)
return(p1)
})
#grid.arrange(mplots[[1]], mplots[[2]], mplots[[3]], mplots[[4]], mplots[[5]], mplots[[6]], nrow = 2,top=textGrob(response,gp=gpar(fontsize=20,font=2)))
#png(paste(response,".png",sep=""),width=3000,height=1500,res=200)
#grid.arrange(mplots[[1]], mplots[[2]], mplots[[3]], mplots[[4]], mplots[[5]], mplots[[6]], nrow = 2,top=textGrob(response,gp=gpar(fontsize=20,font=2)))
#dev.off()
png(paste(response,".png",sep=""),width=5000,height=750,res=300)
grid.arrange(mplots[[1]], mplots[[2]], mplots[[3]], mplots[[4]], mplots[[5]], mplots[[6]], nrow = 1,top=textGrob(response,gp=gpar(fontsize=20,font=2)))
dev.off()
}




valid <- which(sign(rescov$summary.fixed[,"0.025quant"]) == sign(rescov$summary.fixed[,"0.975quant"]))
validnames <- rownames(rescov$summary.fixed[valid,])
validmean <- rescovnorm$summary.fixed[valid,"mean"]
names(validmean) <- validnames
barplot(validmean)



fitted <- resclimhumaninormlist$Mammoth
valid <- which(sign(fitted$summary.fixed[,"0.025quant"]) == sign(fitted$summary.fixed[,"0.975quant"]))
validnames <- rownames(fitted$summary.fixed[valid,])
validmean <- fitted$summary.fixed[valid,"mean"]
names(validmean) <- validnames
barplot(validmean,cex.names=0.2,horiz=TRUE,las=1)


for(animal in goodanimalnames){
    print(animal)
    fitted <- reshumnormlist[[animal]]
    valid <- which(sign(fitted$summary.fixed[,"0.025quant"]) == sign(fitted$summary.fixed[,"0.975quant"]))
    validnames <- rownames(fitted$summary.fixed[valid,])
    validmean <- fitted$summary.fixed[valid,"mean"]
    names(validmean) <- validnames
    print(validnames)
}



Z <- sitetab$Horse

tab <- cbind(xytab,sitetab$Age,Z)
colnames(tab) <- c("LON","LAT","TIME","VALS")
tab[,1] <- jitter(tab[,1],amount=0.2)
tab[,2] <- jitter(tab[,2],amount=0.2)
tab <- as.data.frame(tab)
table <- tibble(tab)
toplot <- table
toplot <- table[which(table$VALS == 1),]
hist(sitetab$Age[which(Z == 1)])
ggplot(toplot, aes(x=LON, y=LAT, colour=TIME)) + geom_point() + scale_colour_gradient(low="blue", high="red")






# PLANTS - USE HURDLE GAMMA MODEL